<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ABOUTUS" xml:space="preserve">
    <value>ABOUT US</value>
  </data>
  <data name="DynamicMediaCompany" xml:space="preserve">
    <value>Dynamic Media Company</value>
  </data>
  <data name="EquallyImportantTarget" xml:space="preserve">
    <value>An equally important target group for us is the consumer who would like to convey his or her personal message. Think of a marriage proposal or a congratulations when an important milestone has been achieved. Then, apart from the originality, this is also a very original promotion or gift from a price point of view. We convey your personal message on an illuminated bus shelter format or three times as large on a triple, which is seen by thousands of travelers.</value>
  </data>
  <data name="ServesTwoTargetGroups" xml:space="preserve">
    <value>Media Outdoor serves two target groups. The business market for which this medium is therefore extremely suitable. Think of Amsterdam's retail sector, which can present itself in this price-wise attractive way to the target group in the part of the city where the store is located or at multiple stations. But our digital screens are also an excellent opportunity for SMEs in and around Amsterdam to communicate their services or products.</value>
  </data>
  <data name="TargetedOutOfHome" xml:space="preserve">
    <value>Targeted Out Of Home (OOH) advertising is an effective way to contribute maximally to achieving business objectives. We show your advertising to your target group on high-quality digital screens at the right time and in the right place. At locations where thousands of visitors pass by every week, you are visible and you ensure that people remember your company or personal message (the private individual).</value>
  </data>
  <data name="WhatWeDo" xml:space="preserve">
    <value>What We Do?</value>
  </data>
  <data name="WhatWeDoContent" xml:space="preserve">
    <value>The head office is located in Amsterdam. They advise and support in the field of screen advertising in all Amsterdam metro stations.</value>
  </data>
  <data name="WhoWeAre" xml:space="preserve">
    <value>Who We Are?</value>
  </data>
  <data name="WhoWeAreContent" xml:space="preserve">
    <value>Media Outdoor is a media company with experienced professionals in marketing, outdoor media and communication.</value>
  </data>
  <data name="WhyChooseUs" xml:space="preserve">
    <value>Why Choose Us?</value>
  </data>
  <data name="WhyChooseUsContent" xml:space="preserve">
    <value>Choose one close by or go for more stations if you want to reach a larger part of Amsterdam. Need help? We are happy to assist you with advice.</value>
  </data>
  <data name="YoungDynamicMedia" xml:space="preserve">
    <value>Media Outdoor is a young dynamic media company with experienced professionals in marketing, outdoor media and communication. Our head office is located in Amsterdam. We advise and support in the field of screen advertising in all Amsterdam metro stations. We build tailor-made advertising campaigns with unlimited possibilities with our creative content team. Goal-oriented and successful.</value>
  </data>
</root>