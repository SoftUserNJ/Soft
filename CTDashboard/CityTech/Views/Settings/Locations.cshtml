@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer Localizer;


@{
    ViewData["Title"] = "Locations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content ListPage pt-1">
    <div class="page-header">
        <div class="page-title">
            <h4>@Localizer["ObjectLocationsManagement"]</h4>
            <h6>@Localizer["Add/UpdateObjectLocations"]</h6>
        </div>
        <div class="page-btn">
            <div class="wordset newwordset">
                <ul>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="Word" id="convertWord">
                            <i class="far fa-file-word" style="color: #1265c3; font-size:21px;"></i>
                        </a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="PDF" id="pdfPrint">
                            <i class="far fa-file-pdf" style="color: #ea5455; font-size:21px;"></i>
                        </a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="Excel" id="convertExcel">
                            <i class="far fa-file-excel" style="color: #28c76f; font-size:21px;"></i>
                        </a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="CSV" id="convertCsv">
                            <i class="fa-solid fa-file-csv" style="color: #28c76f; font-size:21px;"></i>
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Home" asp-action="Dashboard" role="button">
                            <i class="fas fa-times-circle fs-22" style="color: #ff0000;"></i>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-top table-topm">
                <div class="search-set">
                    <div class="search-path">
                        <a class="btn btn-filter" id="filter_search_rm">
                            <img src="~/assets/img/icons/filter.svg" alt="img">
                            <span><img src="~/assets/img/icons/closes.svg" alt="img"></span>
                        </a>
                    </div>
                    <div class="search-input">
                        <input type="search" id="txtSearch" class="rounded-pill">
                    </div>
                </div>
                <div class="wordset">
                    <p href="javascript:void(0);" class="btn btn-addednew btnAdd ct-btns">
                        <img src="~/assets/img/icons/plus.svg" alt="img" class="me-1">@Localizer["AddNew"]
                    </p>
                </div>
            </div>

            <div class="table-responsive" style="height:395px;">
                <table class="table text-white table-hover" id="tbl-print">
                    <thead>
                        <tr>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />Id</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["Address"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["Address2"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["Station"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["Customer"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["ContactPerson"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["PersonPhone"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["Residence"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["Region"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["PostalCode"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["Latitude"]</th>
                            <th class="ps-2"><input type="checkbox" checked class="printCheckBox notPrintCol" />@Localizer["Longitude"]</th>
                            <th class="text-center pe-3 ps-2 last-th-sticky"><input type="checkbox" hidden class="printCheckBox notPrintCol" />@Localizer["Action"]</th>
                        </tr>
                    </thead>
                    <tbody id="objectLocationList">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="content AddPage pt-1">
    <div class="page-header">
        <div class="page-title">
            <h4>@Localizer["ObjectLocationAdd"]</h4>
        </div>
        <div class="page-btn">
            <a href="javascript:void(0);" class="btn btn-added btnList ct-btns">
                <i class="fa me-2 fa-th-list" data-bs-toggle="tooltip" title="" data-bs-original-title="" aria-label="fa fa-th-list"></i> @Localizer["ObjectsLocation"]
            </a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="row activeForm disabled">

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label>@Localizer["ObjectLocation"]</label>
                        <input type="text" id="txtObjectLocation" class="rounded-pill" skinid="Enter Object Location....!">
                        <input type="hidden" id="txtObjectLocationId">
                    </div>
                </div>

                <div class="col-lg-4 col-md-4 col-sm-6">
                    <div class="form-group">
                        <label>@Localizer["Customer"]</label>
                        <div class="row">
                            <div class="col-lg-10 col-sm-10 col-10">
                                <select class="js-example-basic-single select2" id="drpCustomer" skinid="Select Customer....!"></select>
                            </div>
                            <div class="col-lg-2 col-sm-2 col-2 ps-0 pe-0">
                                <div @*class="add-icon text-end"*@>
                                    <i class="fa fa-plus custom-plus-icon text-center" aria-label="fa fa-plus" title="Customer" data-bs-toggle="modal" data-bs-target="#CustomersModal"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 col-md-4 col-sm-6">
                    <div class="form-group">
                        <label>@Localizer["Station"]</label>
                        <div class="row">
                            <div class="col-lg-10 col-sm-10 col-10">
                                <select class="js-example-basic-single select2" id="drpStation" skinid="Select Station....!"></select>
                            </div>
                            <div class="col-lg-2 col-sm-2 col-2 ps-0 pe-0">
                                <div @*class="add-icon text-end"*@>
                                    <i class="fa fa-plus custom-plus-icon text-center" aria-label="fa fa-plus" title="Station" data-bs-toggle="modal" data-bs-target="#StationModal"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label>@Localizer["ObjectLocation2"]</label>
                        <input type="text" id="txtObjectLocation2" class="rounded-pill" skinid="">
                    </div>
                </div>

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label class="form-label">@Localizer["Latitude"]</label>
                        <input type="text" class="form-control rounded-pill" id="txtLocationLat" skinid="">
                    </div>
                </div>

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label class="form-label">@Localizer["Longitude"]</label>
                        <input type="text" class="form-control rounded-pill" id="txtLocationLong" skinid="">
                    </div>
                </div>

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label class="form-label">@Localizer["ContactPerson"]</label>
                        <input type="text" class="form-control rounded-pill" id="txtLocContactPerson" skinid="">
                    </div>
                </div>

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label class="form-label">@Localizer["ContactPersonPhone"]</label>
                        <input type="text" class="form-control rounded-pill" id="txtLocContactPersonPhone" skinid="">
                    </div>
                </div>

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label class="form-label">@Localizer["Residence"]</label>
                        <input type="text" class="form-control rounded-pill" id="txtLocationResidence" skinid="">
                    </div>
                </div>

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label class="form-label">@Localizer["Region"]</label>
                        <input type="text" class="form-control rounded-pill" id="txtLocationRegion" skinid="">
                    </div>
                </div>

                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label class="form-label">@Localizer["PostalCode"]</label>
                        <input type="text" class="form-control rounded-pill" id="txtLocationPostalCode" skinid="">
                    </div>
                </div>
                <div class="col-lg-4 col-4 col-sm-6">
                    <div class="form-group">
                        <label class="form-label">@Localizer["GoogleMapsLocation"]</label>
                        <div id="map" style="height: 200px;width: 100%;"></div>
                        <script>
                            function initMap() {
                                let map, marker;

                                map = new google.maps.Map(document.getElementById('map'), {
                                    center: { lat: 0, lng: 0 },
                                    zoom: 17
                                });

                                const input = document.getElementById('txtObjectLocation');
                                const input1 = document.getElementById('location-input1');
                                const searchBox = new google.maps.places.SearchBox(input);

                                map.addListener('bounds_changed', function () {
                                    searchBox.setBounds(map.getBounds());
                                });

                                searchBox.addListener('places_changed', function () {
                                    const places = searchBox.getPlaces();

                                    if (places.length === 0) {
                                        return;
                                    }

                                    const place = places[0];
                                    // Update the latitude and longitude fields
                                    document.getElementById('txtLocationLat').value = place.geometry.location.lat();
                                    document.getElementById('txtLocationLong').value = place.geometry.location.lng();

                                    if (marker) {
                                        marker.setMap(null);
                                    }

                                    marker = new google.maps.Marker({
                                        map: map,
                                        position: place.geometry.location,
                                        draggable: true
                                    });

                                    map.panTo(place.geometry.location);

                                    marker.addListener('dragend', function () {
                                        const position = marker.getPosition();
                                        document.getElementById('txtLocationLat').value = position.lat();
                                        document.getElementById('txtLocationLong').value = position.lng();
                                        reverseGeocode(position);
                                    });

                                    input1.addEventListener('change', function () {
                                        const latLngArray = input1.value.split(',');
                                        if (latLngArray.length === 2) {
                                            const newLatLng = new google.maps.LatLng(parseFloat(latLngArray[0]), parseFloat(latLngArray[1]));
                                            marker.setPosition(newLatLng);
                                            map.panTo(newLatLng);
                                            document.getElementById('txtLocationLat').value = newLatLng.lat();
                                            document.getElementById('txtLocationLong').value = newLatLng.lng();
                                            reverseGeocode(newLatLng);
                                        }
                                    });

                                    // Zoom in on marker click
                                    marker.addListener('click', function () {
                                        map.setZoom(map.getZoom() + 1);
                                        map.panTo(marker.getPosition());
                                    });

                                    document.getElementById('txtLocationLat').value = place.geometry.location.lat();
                                    document.getElementById('txtLocationLong').value = place.geometry.location.lng();
                                    reverseGeocode(place.geometry.location);
                                });

                                function reverseGeocode(position) {
                                    const geocoder = new google.maps.Geocoder();
                                    geocoder.geocode({ 'location': position }, function (results, status) {
                                        if (status === 'OK' && results[0]) {
                                            document.getElementById('location-name').value = results[0].formatted_address;
                                        } else {
                                            document.getElementById('location-name').value = '';
                                        }
                                    });
                                }
                            }
                        </script>
    @* <input id="location-input" type="text" placeholder="Search for a location">
    <input id="latitude" type="text" placeholder="Latitude">
    <input id="longitude" type="text" placeholder="Longitude">
    <input id="location-name" type="text" placeholder="Location Name">
    <input id="location-input1" type="text" placeholder="Enter lat,lng">*@
   <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDkm76bzi-jCEicB-wsTV7DqxfJrR478tM&libraries=places&callback=initMap"></script>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="mb-2">
                    <button class="btn btn-primary btn-sm ct-btns" id="btnNewObjectLocation">@Localizer["New"]</button>
                    <button class="btn btn-success btn-sm ct-btns" id="btnSaveObjectLocation">@Localizer["Save"]</button>
                    <button class="btn btn-secondary btn-sm ct-btns" id="btnRefreshObjectLocation">@Localizer["Refresh"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade ObjCustomers" id="CustomersModal">
    @Html.Partial("~/Views/PartialViews/Objects/Customers.cshtml")
</div>

<div class="modal fade ObjStation" id="StationModal">
    @Html.Partial("~/Views/PartialViews/Objects/Station.cshtml")
</div>

@section scripts{
    <script>

        $(function () {
            $(".AddPage").hide();
            $("#btnRefreshObjectLocation").click();
            GetObjLocations();

            GetCustomerList()
            $("#btnRefreshCustomer").click();

            GetStations();
            $("#btnRefreshObjectStation").click();

            UserPageRights();
        });

        $(".btnAdd").click(function () {
            $(".ListPage").hide();
            $(".AddPage").show();
            $("#txtObjectLocationId").val('');
            $("#btnRefreshObjectLocation").click();
        });

        $(".btnList").click(function () {
            $(".ListPage").show();
            $(".AddPage").hide();
        });

        //====================== Get Data ========================\\

        function GetObjLocations() {
            try {
                $.ajax({
                    type: "Get",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/Settings/GetObjLocations/",
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        $("#objectLocationList").empty();

                        $.each(data, function (i, item) {
                            $("#objectLocationList").append(`
                             <tr>
                                <td class="ObjectLocId ps-2">${item.ID}</td>
                                <td class="objectLocName">${item.ADDRESS}</td>
                                <td class="objectLocName2">${item.ADDRESS2}</td>
                                <td class="objectStationId d-none">${item.STATIONID}</td>
                                <td class="objectStation">${item.STATION}</td>
                                <td class="objectCustomerId d-none">${item.CUSTOMERID}</td>
                                <td class="objectCustomerName">${item.CUSTOMER}</td>
                                <td class="objectPerson">${item.CONTACTPERSON}</td>
                                <td class="objectPersonPhone">${item.CONTACTPERSONPHONE}</td>
                                <td class="objectResidence">${item.RESIDENCE}</td>
                                <td class="objectRegion">${item.REGION}</td>
                                <td class="objectPostalCode">${item.POSTALCODE}</td>
                                <td class="objectLati">${item.LATI}</td>
                                <td class="objectLongi">${item.LONGI}</td>
                                <td class="text-center last-td-sticky">
                                    <span class="me-3 btnEditObjectLoc cursor-pointer" >
                                        <img src="/assets/img/icons/edit.svg" alt="img">
                                    </span>
                                    <span class="confirm-text btnDelObjectLoc cursor-pointer" >
                                        <img src="/assets/img/icons/delete.svg" alt="img">
                                    </span>
                                </td>
                             </tr>
                            `)
                        })
                    },
                    error: function (data) {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        }


        $("#btnSaveObjectLocation").click(function () {

            if (CheckValidation("AddPage") == false) {

                return false;
            }

            var obj = {};
            obj.id = $("#txtObjectLocationId").val();
            obj.address = $("#txtObjectLocation").val();
            obj.address2 = $("#txtObjectLocation2").val();
            obj.lati = $("#txtLocationLat").val();
            obj.longi = $("#txtLocationLong").val();
            obj.contactPerson = $("#txtLocContactPerson").val();
            obj.contactPersonPhone = $("#txtLocContactPersonPhone").val();
            obj.residence = $("#txtLocationResidence").val();
            obj.region = $("#txtLocationRegion").val();
            obj.postalCode = $("#txtLocationPostalCode").val();
            obj.customerId = $("#drpCustomer option:selected").val();
            obj.stationId = $("#drpStation option:selected").val();
            obj.activityLogDateTime = moment().format('YYYY-MM-DD HH:mm:ss');


            //CheckDuplicateEntry(NameMatch, LoopTableBodyId, TableDataNameMatchByClass, IgnoreValueId, IngoreValClassInTable)
            if (CheckDuplicateEntry($("#txtObjectLocation").val(), "#objectLocationList", ".objectLocName", $("#txtObjectLocationId").val(), ".ObjectLocId") == false) {
                toastr.info("Object Location Name Already Added.", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                $("#txtObjectLocation").focus();
                return false;
            }

            try {
                $.ajax({
                    type: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/Settings/SaveLocations/",
                    data: obj,
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        if (data != false) {
                            toastr.success("Save Successfully", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                            GetObjLocations();
                            $("#txtObjectLocationId").val("");
                            $("#btnRefreshObjectLocation").click();
                        }
                        else {
                            toastr.error("Please Save Again", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        }
                    },
                    error: function () {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        });

        $('body').on('click', ".btnDelObjectLoc", function () {

            var x = confirm("Are you sure you want to delete?");
            if (x == false) { return false; }

            var obj = {};
            obj.id = $(this).closest('tr').find(".ObjectLocId").text();
            obj.activityLogDateTime = moment().format('YYYY-MM-DD HH:mm:ss');


            try {
                $.ajax({
                    type: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/Settings/DelLocations/",
                    data: obj,
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        if (data == "Already In Use") {
                            toastr.error(data, "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        } else
                        if (data != false) {
                            toastr.success("Deleted Successfully", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                            GetObjLocations();
                        }
                        else {
                            toastr.error("Please Delete Again", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        }
                    },
                    error: function () {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        });

        $("body").on('click', '.btnEditObjectLoc', function () {

            var id = $(this).closest('tr').find('.ObjectLocId').text();
            var name = $(this).closest('tr').find('.objectLocName').text();
            var name2 = $(this).closest('tr').find('.objectLocName2').text();
            var lati = $(this).closest('tr').find('.objectLati').text();
            var longi = $(this).closest('tr').find('.objectLongi').text();
            var person = $(this).closest('tr').find('.objectPerson').text();
            var phone = $(this).closest('tr').find('.objectPersonPhone').text();
            var residence = $(this).closest('tr').find('.objectResidence').text();
            var region = $(this).closest('tr').find('.objectRegion').text();
            var postalCode = $(this).closest('tr').find('.objectPostalCode').text();
            var objectCustomerId = $(this).closest('tr').find('.objectCustomerId').text();
            var station = $(this).closest('tr').find('.objectStationId').text();

            $("#txtObjectLocationId").val(id);
            $("#txtObjectLocation").val(name);
            $("#txtObjectLocation2").val(name2);
            $("#txtLocationLat").val(lati);
            $("#txtLocationLong").val(longi);
            $("#txtLocContactPerson").val(person);
            $("#txtLocContactPersonPhone").val(phone);
            $("#txtLocationResidence").val(residence);
            $("#txtLocationRegion").val(region);
            $("#txtLocationPostalCode").val(postalCode);
            $("#drpCustomer").val(objectCustomerId);
            $("#drpCustomer").next('span').find('.select2-selection__rendered').html($("#drpCustomer option:selected").text());

            $("#drpStation").val(station);
            $("#drpStation").next('span').find('.select2-selection__rendered').html($("#drpStation option:selected").text());


            $(".activeForm").removeClass('disabled');

            $("#btnSaveObjectLocation").show();
            $("#btnNewObjectLocation").hide();
            $("#btnSaveObjectLocation").text('Update');

            $(".ListPage").hide();
            $(".AddPage").show();
        });

        //====================== Customers ========================\\

        function GetCustomerList() {
            try {
                $.ajax({
                    type: "Get",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/User/CustomerGet/",
                    async: false,
                    dataType: "json",
                    success: function (data) {

                        $("#allCustomersList").empty();
                        $("#drpCustomer").empty();
                        $("#drpCustomer").append(`<option value="0">--- Select Customer ---</option>`);

                        $.each(data, function (i, item) {
                        $("#drpCustomer").append(`<option value="${item.id}">${item.name}</option>`);

                            $("#allCustomersList").append(`
                             <tr>
                                 <td class="customerId ps-2">${item.id}</td>
                                 <td class="customerName ps-2">${item.name}</td>
                                 <td class="customerEmail ps-2">${item.email}</td>
                                 <td class="customerPhone ps-2">${item.phone}</td>
                                 <td class="customerGender ps-2">${item.gender}</td>
                                 <td class="businessName ps-2">${item.business}</td>
                                 <td class="customerVatNo ps-2">${item.vatno}</td>
                                 <td class="customerChamberCommerce ps-2">${item.commercechamber}</td>
                                 <td class="text-center last-td-sticky">
                                     <span class="me-1 btnEditCustomer cursor-pointer" >
                                         <img src="/assets/img/icons/edit.svg" alt="img">
                                     </span>
                                     <span class="confirm-text btnDelCustomer cursor-pointer" >
                                         <img src="/assets/img/icons/delete.svg" alt="img">
                                     </span>
                                 </td>
                             </tr>
                            `)
                        })
                    },
                    error: function (data) {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        }

        $("#btnSaveCustomer").click(function () {

            var txtCustomerEmail = $('#txtCustomerEmail').val();
            var emailRegex = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

            if (txtCustomerEmail.length > 0) {
                if (!emailRegex.test(txtCustomerEmail)) {
                    toastr.warning("Invalid Email Address", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                    $('#txtCustomerEmail').focus();
                    return false;
                }
            }

            if (CheckValidation("ObjCustomers") == false) {

                    return false;
            }

            var obj = {};

            obj.id = $("#txtCustomerId").val();
            obj.name = $("#txtCustomerName").val();
            obj.phone = $("#txtCustomerPhone").val();
            obj.email = $("#txtCustomerEmail").val();
            obj.gender = $("#drpCustomerGender").val();
            obj.businessName = $("#txtCustomerBusiness").val();
            obj.vatNo = $("#txtCustomerVatNo").val();
            obj.ChamberOfCommerceNo = $("#txtCustomerChamberCommerce").val();
            obj.activityLogDateTime = moment().format('YYYY-MM-DD HH:mm:ss');


            //CheckDuplicateEntry(NameMatch, LoopTableBodyId, TableDataNameMatchByClass, IgnoreValueId, IngoreValClassInTable)
            if (CheckDuplicateEntry($("#txtCustomerName").val(), "#allCustomersList", ".customerName", $("#txtCustomerId").val(), ".customerId") == false) {
                toastr.info("Customer Name Already Added.", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                $("#txtCustomerName").focus();
                return false;
            }

            try {
                $.ajax({
                    type: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/User/CustomerSave/",
                    data: obj,
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        if (data != false) {
                            toastr.success("Save Successfully", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                            GetCustomerList();
                            FieldsFilling();
                            $("#txtCustomerId").val("");
                            $("#btnRefreshCustomer").click();
                        }
                        else {
                            toastr.error("Please Save Again", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        }
                    },
                    error: function () {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        });

        $('body').on('click', ".btnDelCustomer", function () {

            var x = confirm("Are you sure you want to delete?");
            if (x == false) { return false; }

            var obj = {};
            obj.id = $(this).closest('tr').find(".customerId").text();
            obj.activityLogDateTime = moment().format('YYYY-MM-DD HH:mm:ss');


            try {
                $.ajax({
                    type: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/User/DelCustomer/",
                    data: obj,
                    async: false,
                    dataType: "json",
                    success: function (data) {

                        if (data == "Already In Use") { 
                            toastr.error(data, "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        } else  
                        if (data != false) {
                            toastr.success("Deleted Successfully", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                            GetCustomerList();
                            FieldsFilling();
                        }
                        else {
                            toastr.error("Please Delete Again", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        }
                    },
                    error: function () {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        });

        $("body").on('click', '.btnEditCustomer', function () {

            $(".activeForm").removeClass('disabled');

            var id = $(this).closest('tr').find('.customerId').text();
            var name = $(this).closest('tr').find('.customerName').text();
            var customerPhone = $(this).closest('tr').find('.customerPhone').text();
            var customerEmail = $(this).closest('tr').find('.customerEmail').text();
            var customerGender = $(this).closest('tr').find('.customerGender').text();
            var businessName = $(this).closest('tr').find('.businessName').text();
            var customerVatNo = $(this).closest('tr').find('.customerVatNo').text();
            var customerChamberCommerce = $(this).closest('tr').find('.customerChamberCommerce').text();

            $("#txtCustomerId").val(id);
            $("#txtCustomerName").val(name);
            $("#txtCustomerPhone").val(customerPhone);
            $("#txtCustomerEmail").val(customerEmail);
            $("#drpCustomerGender").val(customerGender);
            $("#txtCustomerBusiness").val(businessName);
            $("#txtCustomerVatNo").val(customerVatNo);
            $("#txtCustomerChamberCommerce").val(customerChamberCommerce);

            $("#btnSaveCustomer").show();
            $("#btnNewCustomer").hide();
            $("#btnSaveCustomer").text('Update');

            $("#txtCustomerName").removeClass('disabled');
            $("#txtCustomerPhone").removeClass('disabled');
            $("#txtCustomerEmail").removeClass('disabled');
            $("#drpCustomerGender").removeClass('disabled');
            $("#txtCustomerBusiness").removeClass('disabled');
            $("#txtCustomerVatNo").removeClass('disabled');
            $("#txtCustomerChamberCommerce").removeClass('disabled');

        });


        $("#btnNewCustomer").click(function () {

            $("#txtCustomerName").removeClass('disabled');
            $("#txtCustomerPhone").removeClass('disabled');
            $("#txtCustomerEmail").removeClass('disabled');
            $("#drpCustomerGender").removeClass('disabled');
            $("#txtCustomerBusiness").removeClass('disabled');
            $("#txtCustomerVatNo").removeClass('disabled');
            $("#txtCustomerChamberCommerce").removeClass('disabled');
            
            $(this).hide();
            $("#btnSaveCustomer").text('Save');
            $("#btnSaveCustomer").show();
            $("#txtCustomerName").focus();

        });

        $("#btnRefreshCustomer").click(function () {

            $("#txtCustomerName").addClass('disabled');
            $("#txtCustomerPhone").addClass('disabled');
            $("#txtCustomerEmail").addClass('disabled');
            $("#drpCustomerGender").addClass('disabled');
            $("#txtCustomerBusiness").addClass('disabled');
            $("#txtCustomerVatNo").addClass('disabled');
            $("#txtCustomerChamberCommerce").addClass('disabled');

            $("#btnSaveCustomer").hide();
            $("#btnNewCustomer").show();

            $("#txtCustomerId").val('');
            $("#txtCustomerName").val('');
            $("#txtCustomerPhone").val('');
            $("#txtCustomerEmail").val('');
            $("#drpCustomerGender").val('');
            $("#txtCustomerBusiness").val('');
            $("#txtCustomerVatNo").val('');
            $("#txtCustomerChamberCommerce").val('');
            $("drpLocation").trigger('change');
        });

        //====================== Stations ========================\\

        function GetStations() {

            try {
                $.ajax({
                    type: "Get",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/Settings/GetObjStations/",
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        
                        $("#drpStation").empty();
                        $("#drpStation").append(`<option value="0">--- Select Station ---</option>`);
                        $("#objectStationList").empty();
                        
                        $.each(data, function (i, item) {
                            $("#drpStation").append(`<option value="${item.id}">${item.station}</option>`);

                            $("#objectStationList").append(`
                             <tr>
                                 <td class="ObjectStationId d-none ps-2">${item.id}</td>
                                 <td class="objectStationName">${item.station}</td>
                                 <td class="text-center last-td-sticky">
                                     <span class="me-3 btnEditObjectStation cursor-pointer" >
                                         <img src="/assets/img/icons/edit.svg" alt="img">
                                     </span>
                                     <span class="confirm-text btnDelObjectStation cursor-pointer" >
                                         <img src="/assets/img/icons/delete.svg" alt="img">
                                     </span>
                                 </td>
                             </tr>
                            `)
                        });
                    },
                    error: function (data) {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        }

        $("#btnSaveObjectStation").click(function () {

            if (CheckValidation("ObjStation") == false) {
                return false;
            }

            var obj = {};
            obj.id = $("#txtObjectStationId").val();
            obj.station = $("#txtObjectStation").val();
            obj.activityLogDateTime = moment().format('YYYY-MM-DD HH:mm:ss');


            //CheckDuplicateEntry(NameMatch, LoopTableBodyId, TableDataNameMatchByClass, IgnoreValueId, IngoreValClassInTable)
            if (CheckDuplicateEntry($("#txtObjectStation").val(), "#objectStationList", ".objectStationName", $("#txtObjectStationId").val(), ".ObjectStationId") == false) {
                toastr.info("Object Station Already Added.", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                $("#txtObjectStation").focus();
                return false;
            }

            try {
                $.ajax({
                    type: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/Settings/SaveStation/",
                    data: obj,
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        if (data != false) {
                            toastr.success("Save Successfully", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                            GetStations();
                            $("#btnRefreshObjectStation").click();
                        }
                        else {
                            toastr.error("Please Save Again", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        }
                    },
                    error: function () {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        });



        $('body').on('click', ".btnDelObjectStation", function () {

            var x = confirm("Are you sure you want to delete?");
            if (x == false) { return false; }

            var obj = {};
            obj.id = $(this).closest('tr').find(".ObjectStationId").text();
            obj.activityLogDateTime = moment().format('YYYY-MM-DD HH:mm:ss');

            try {
                $.ajax({
                    type: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/Settings/DelStation/",
                    data: obj,
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        if (data == "Already In Use") { 
                            toastr.error(data, "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        } else  
                        if (data != false) {
                            toastr.success("Deleted Successfully", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                            GetStations();
                        }
                        else {
                            toastr.error("Please Delete Again", "", { closeButton: !0, tapToDismiss: !1, ltl: o });
                        }
                    },
                    error: function () {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        });


        $("body").on('click', '.btnEditObjectStation', function () {

            var id = $(this).closest('tr').find('.ObjectStationId').text();
            var name = $(this).closest('tr').find('.objectStationName').text();

            $("#txtObjectStationId").val(id);
            $("#txtObjectStation").val(name);
            $("#txtObjectStation").removeClass('disabled');

            $("#btnSaveObjectStation").show();
            $("#btnNewObjectStation").hide();
            $("#btnSaveObjectStation").text('Update');
        });


        $("#btnNewObjectStation").click(function () {
            $(this).hide();
            $("#txtObjectStation").removeClass('disabled');

            $("#btnSaveObjectStation").text('Save');
            $("#btnSaveObjectStation").show();
            $("#txtObjectStation").focus();
        });

        $("#btnRefreshObjectStation").click(function () {

            $("#btnSaveObjectStation").hide();
            $("#btnNewObjectStation").show();
            $("#txtObjectStation").addClass('disabled');

            $("#txtObjectStationId").val('');
            $("#txtObjectStation").val('');
        });

        //====================== Buttons ========================\\
        $("#btnNewObjectLocation").click(function () {
            $(this).hide();
            $(".activeForm").removeClass('disabled');

            $("#btnSaveObjectLocation").text('Save');
            $("#btnSaveObjectLocation").show();
            $("#txtObjectLocation").focus();
        });

        $("#btnRefreshObjectLocation").click(function () {

            var uId = $("#txtObjectLocationId").val();

            if (uId != 0) {
                $(".ObjectLocId").each(function () {
                    const userIdValue = $(this).text().trim();
                    if (userIdValue === uId) {
                        $(this).closest('tr').find('.btnEditObjectLoc').click();
                        return false;
                    }
                });
            }
            else {
                $("#btnSaveObjectLocation").hide();
                $("#btnNewObjectLocation").show();
                $(".activeForm").addClass('disabled');

                $("#txtObjectLocationId").val('');
                $("#txtObjectLocation").val('');
                $("#drpCustomer").val('0');
                $("#drpCustomer").next('span').find('.select2-selection__rendered').html($("#drpCustomer option:selected").text());

                $("#drpStation").val('0');
                $("#drpStation").next('span').find('.select2-selection__rendered').html($("#drpStation option:selected").text());

                $("#txtObjectLocation2").val('');
                $("#txtLocationLat").val('');
                $("#txtLocationLong").val('');
                $("#txtLocContactPerson").val('');
                $("#txtLocContactPersonPhone").val('');
                $("#txtLocationResidence").val('');
                $("#txtLocationRegion").val('');
                $("#txtLocationPostalCode").val('');

            }
        });

        //====================== Search ========================\\

        $(document).on('input', '#txtSearch', function () {
            var value = $(this).val().toLowerCase();
            $("#objectLocationList tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });


        document.getElementById('txtCustomerPhone').addEventListener('input', function (event) {
            const inputValue = event.target.value;
            event.target.value = inputValue.replace(/[^0-9+]/g, '');
        });

        document.getElementById('txtLocContactPersonPhone').addEventListener('input', function (event) {
            const inputValue = event.target.value;
            event.target.value = inputValue.replace(/[^0-9+]/g, '');
        });

        //====================== Word Convert ========================\\

        $('#convertWord').click(function () {
            $(".printCheckBox").trigger('change');

            HTMLtoWORD("tbl-print", "@ViewData["Title"]")
        });

        //====================== Grid Print Start ========================\\

        $('#pdfPrint').click(function () {
            $(".printCheckBox").trigger('change');

            var cloneTable = $("#tbl-print").clone();
            cloneTable.find('.d-none, .notPrintCol').remove();
            $(cloneTable).printThis();
        });

        //====================== Excel Convert ========================\\

        $("#convertExcel").click(function () {
            $(".printCheckBox").trigger('change');

            var cloneTable = $("#tbl-print").clone();
            cloneTable.find('.d-none, .notPrintCol').remove();

            TableToExcel.convert($(cloneTable)[0], {
                name: "@ViewData["Title"]" + ".xlsx",
                sheet: {
                    name: "@ViewData["Title"]"
                },

            });
        });

        //====================== Csv Convert ========================\\

        $("#convertCsv").click(function () {
            $(".printCheckBox").trigger('change');

            var cloneTable = $("#tbl-print").clone();
            cloneTable.find('.d-none, .notPrintCol').remove();

            var csvContent = "data:text/csv;charset=utf-8,";

            var headers = [];
            cloneTable.find("thead th").each(function () {
                headers.push('"' + $(this).text().trim() + '"');
            });

            csvContent += headers.join(",") + "\r\n";

            var tbody = cloneTable.find("tbody");

            tbody.find("tr").each(function () {
                var row = [];

                $(this).find("td").each(function () {
                    var cellText = $(this).text().trim();

                    // If the cell text contains a comma, enclose it in double quotes
                    if (cellText.includes(",")) {
                        row.push('"' + cellText + '"');
                    } else {
                        row.push(cellText);
                    }
                });

                csvContent += row.join(",") + "\r\n";
            });

            var encodedUri = encodeURI(csvContent);

            var link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "@ViewData["Title"]" + ".csv");

            document.body.appendChild(link);
            link.click();

            document.body.removeChild(link);
        });

        //================ Select Column By CheckBox ==================\\
        $(".printCheckBox").change(function () {
            const columnIndex = $(this).closest("th").index();
            const isChecked = $(this).is(":checked");
            const colClassToAdd = isChecked ? "PrintCol" : "notPrintCol";
            const colClassToRemove = isChecked ? "notPrintCol" : "PrintCol";

            $("#tbl-print tr").each(function () {
                const $cells = $(this).find(`th:eq(${columnIndex}), td:not(.d-none):eq(${columnIndex})`);
                $cells.removeClass(colClassToRemove).addClass(colClassToAdd);
            });
        });

        //================ User Page Rights ==================\\

        function UserPageRights(){

            try {
                $.ajax({
                    type: "Get",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    url: "/User/UserPageRights/",
                    data: { url: window.location.pathname },
                    async: false,
                    dataType: "json",
                    success: function (data) {
                        if (data.word == false) { $("#convertWord").closest('li').remove(); }
                        if(data.pdf == false){ $("#pdfPrint").closest('li').remove(); }
                        if (data.excel == false) { $("#convertExcel").closest('li').remove(); }
                        if (data.csv == false) { $("#convertCsv").closest('li').remove(); }
                        if (data.delete == false) { $(".btnDelObjectLoc").remove(); }
                        if (data.edit == false) { $(".btnEditObjectLoc").remove(); }

                        if(data.save == false){
                            $(".btnAdd").closest('div').remove();
                            $("#btnRefreshObjectLocation, #btnNewCustomer, #btnSaveCustomer, #btnRefreshCustomer, .btnEditCustomer, .btnDelCustomer, #btnNewObjectStation, #btnSaveObjectStation, #btnRefreshObjectStation, .btnEditObjectStation, .btnDelObjectStation").remove();
                            $("#drpCustomer, #drpStation").closest('.row').find('.custom-plus-icon').addClass('disabled');
                        }
                    },
                    error: function (data) {
                    }
                });
            }
            catch (err) {
                alert(err)
            }
        }

    </script>
}