using SoftaxeERP_API.Models;
using SoftaxeERP_API.VM;
using System.Data;

namespace SoftaxeERP_API.Services
{
    public interface IBillDueStatus
    {
        DataTable SaleBillDueStatus(DateTime fromDate, DateTime toDate, string status, int cmpId, string locId);
        DataTable PurchaseBillDueStatus(DateTime fromDate, DateTime toDate, string status, int cmpId, string locId);
        DataTable GetRecAmount(int invoiceNo, string vchType);
        DataTable GetJobDueStatus(DateTime fromDate, DateTime toDate);
    }

    public class BillDueStatus : IBillDueStatus
    {
        private readonly ErpSoftaxeContext _context;
        private readonly IDataLogic _dataLogic;
        private readonly IAuth _auth;

        readonly AuthVM auth = new();
        public BillDueStatus(ErpSoftaxeContext context, IDataLogic dataLogic, IAuth authData)
        {
            _context = context;
            _dataLogic = dataLogic;
            _auth = authData;

            auth = _auth.GetUserData();
        }

        public DataTable PurchaseBillDueStatus(DateTime fromDate, DateTime toDate, string status, int cmpId, string locId)
        {
            string cashCode = _context.Level4s.Where(x => x.Tag1 == "H" && x.CompId == auth.CmpId).Select(y => y.Level3 + y.Level41).FirstOrDefault();
            string qry = "";

            if (status.ToLower() == "all")
            {
                qry = $@"SELECT V.VCHNO AS INVOICENO, V.VCHTYPE, V.DMCODE + V.CODE AS CODE, L5.NAMES, U.USERNAME AS ORDERTAKER, CONVERT(VARCHAR, V.VCHDATE,103) AS INVDATE, CONVERT(VARCHAR, V.DUEDATE,103) AS DUEDATE,
                ISNULL(V.DISCOUNT,0) AS DISCOUNT,ISNULL(V.DiscountAmt,0) AS DISAMOUNT,ISNULL(V.OtherCredit,0) AS OTHERCREDIT,ISNULL(V.CREDIT,0) AS NETDUE,
                (CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.CREDIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END) AS RECAMOUNT,
                ISNULL(ISNULL(CREDIT,0) - ISNULL(CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.CREDIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END,0),0) AS BALANCE
                FROM TBLTRANSVCH V
                INNER JOIN TRANSMAIN M ON M.VCHTYPE = V.VCHTYPE AND M.VCHNO = V.VCHNO AND M.CMP_ID = V.CMP_ID AND M.LOCID = V.LOCID
                LEFT OUTER JOIN LEVEL5 L5 ON L5.LEVEL4+L5.LEVEL5 = V.DMCODE + V.CODE AND V.CMP_ID = L5.COMP_ID
                LEFT OUTER JOIN USERS U ON U.ID = V.OrderTakerId AND U.CMP_ID = V.CMP_ID AND U.LOCID = V.LOCID AND V.CMP_ID = U.CMP_ID 
                WHERE V.VCHTYPE IN ('PI', 'RP-RAW') AND V.TUCKS = '9' AND V.CMP_ID = {cmpId} AND V.LOCID LIKE '{locId}' AND V.FINID  BETWEEN '1' AND '100' 
                AND CONVERT(VARCHAR,V.VCHDATE,111) BETWEEN '{fromDate.ToString("yyyy/MM/dd")}' AND '{toDate.ToString("yyyy/MM/dd")}' {auth.ApprovalSystem.Replace("<>", "=")} ORDER BY L5.NAMES";
            }
            else if (status.ToLower() == "overdue")
            {
                qry = $@"SELECT V.VCHNO AS INVOICENO, V.VCHTYPE, V.DMCODE + V.CODE AS CODE, L5.NAMES,U.USERNAME AS ORDERTAKER, CONVERT(VARCHAR, V.VCHDATE,103) AS INVDATE, CONVERT(VARCHAR, V.DUEDATE,103) AS DUEDATE,
                ISNULL(V.DISCOUNT,0) AS DISCOUNT,ISNULL(V.DiscountAmt,0) AS DISAMOUNT,ISNULL(V.OtherCredit,0) AS OTHERCREDIT,ISNULL(V.CREDIT,0) AS NETDUE,
                (CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.DEBIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END) AS RECAMOUNT,
                ISNULL(ISNULL(CREDIT,0) - ISNULL(CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.CREDIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END,0),0) AS BALANCE
                FROM TBLTRANSVCH V
                INNER JOIN TRANSMAIN M ON M.VCHTYPE = V.VCHTYPE AND M.VCHNO = V.VCHNO AND M.CMP_ID = V.CMP_ID AND M.LOCID = V.LOCID
                LEFT OUTER JOIN LEVEL5 L5 ON L5.LEVEL4+L5.LEVEL5 = V.DMCODE + V.CODE AND V.CMP_ID = L5.COMP_ID
                LEFT OUTER JOIN USERS U ON U.ID = V.OrderTakerId AND U.CMP_ID = V.CMP_ID AND U.LOCID = V.LOCID AND V.CMP_ID = U.CMP_ID 
                WHERE V.VCHTYPE IN ('PI', 'RP-RAW') AND V.TUCKS = '9'  AND V.CMP_ID = {cmpId} AND V.LOCID LIKE '{locId}' AND V.FINID  BETWEEN '1' AND '100' AND CONVERT(VARCHAR,V.DUEDATE,111) <= convert(varchar(11), GETDATE(), 111) AND
                ISNULL(ISNULL(CREDIT,0) - ISNULL(CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.CREDIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END,0),0) <> 0 {auth.ApprovalSystem.Replace("<>", "=")}
                ORDER BY L5.NAMES";
            }
            else if (status.ToLower() == "pending")
            {
                qry = $@"SELECT V.VCHNO AS INVOICENO, V.VCHTYPE, V.DMCODE + V.CODE AS CODE, L5.NAMES,U.USERNAME AS ORDERTAKER, CONVERT(VARCHAR, V.VCHDATE,103) AS INVDATE, CONVERT(VARCHAR, V.DUEDATE,103) AS DUEDATE,
                ISNULL(V.DISCOUNT,0) AS DISCOUNT,ISNULL(V.DiscountAmt,0) AS DISAMOUNT,ISNULL(V.OtherCredit,0) AS OTHERCREDIT,ISNULL(V.CREDIT,0) AS NETDUE,
                (CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.CREDIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END) AS RECAMOUNT,
                ISNULL(ISNULL(CREDIT,0) - ISNULL(CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.CREDIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END,0),0) AS BALANCE
                FROM TBLTRANSVCH V
                INNER JOIN TRANSMAIN M ON M.VCHTYPE = V.VCHTYPE AND M.VCHNO = V.VCHNO AND M.CMP_ID = V.CMP_ID AND M.LOCID = V.LOCID
                LEFT OUTER JOIN LEVEL5 L5 ON L5.LEVEL4+L5.LEVEL5 = V.DMCODE + V.CODE AND V.CMP_ID = L5.COMP_ID 
                LEFT OUTER JOIN USERS U ON U.ID = V.OrderTakerId  AND U.LOCID = V.LOCID AND V.CMP_ID = U.CMP_ID
                WHERE V.VCHTYPE IN ('PI', 'RP-RAW') AND V.TUCKS = '9' AND V.CMP_ID = {cmpId} AND V.LOCID LIKE '{locId}' AND V.FINID  BETWEEN '1' AND '100' 
                AND ISNULL(ISNULL(CREDIT,0) - ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0),0) <> 0 {auth.ApprovalSystem.Replace("<>", "=")}
                UNION ALL 
                SELECT V.VCHNO AS INVOICENO, V.VCHTYPE, V.DMCODE + V.CODE AS CODE, L5.NAMES,U.USERNAME AS ORDERTAKER, CONVERT(VARCHAR, V.VCHDATE,103) AS INVDATE, CONVERT(VARCHAR, V.DUEDATE,103) AS DUEDATE, 
                0 AS DISCOUNT,0AS DISAMOUNT,0 AS OTHERCREDIT,ISNULL(V.DEBIT,0)*-1 AS NETDUE, 
                ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) AS RECAMOUNT, 
                ISNULL(DEBIT,0)*-1 AS BALANCE 
                FROM TBLTRANSVCH V 
                INNER JOIN TRANSMAIN M ON M.VCHTYPE = V.VCHTYPE AND M.VCHNO = V.VCHNO AND M.CMP_ID = V.CMP_ID AND M.LOCID = V.LOCID
                LEFT OUTER JOIN LEVEL5 L5 ON L5.LEVEL4+L5.LEVEL5 = V.DMCODE + V.CODE AND V.CMP_ID = L5.COMP_ID
                LEFT OUTER JOIN USERS U ON U.ID = V.OrderTakerId AND U.LOCID = V.LOCID AND V.CMP_ID = U.CMP_ID 
                WHERE V.VCHTYPE ='PR' AND V.TUCKS = '9' AND V.CMP_ID = {cmpId} AND V.LOCID LIKE '{locId}' AND V.FINID  BETWEEN '1' AND '100' {auth.ApprovalSystem.Replace("<>", "=")} ORDER BY NAMES";
            }

            return _dataLogic.LoadData(qry);
        }

        public DataTable SaleBillDueStatus(DateTime fromDate, DateTime toDate, string status, int cmpId, string locId)
        {
            string cashCode = _context.Level4s.Where(x => x.Tag1 == "H" && x.CompId == auth.CmpId).Select(y => y.Level3 + y.Level41).FirstOrDefault();
            string qry = "";

            if (status.ToLower() == "all")
            {
                qry = $@"SELECT V.VCHNO AS INVOICENO, V.DMCODE + V.CODE AS CODE, L5.NAMES, U.USERNAME AS ORDERTAKER, CONVERT(VARCHAR, V.VCHDATE,103) AS INVDATE, CONVERT(VARCHAR, V.DUEDATE,103) AS DUEDATE,
                ISNULL(V.DISCOUNT,0) AS DISCOUNT,ISNULL(V.DiscountAmt,0) AS DISAMOUNT,ISNULL(V.OtherCredit,0) AS OTHERCREDIT,ISNULL(V.DEBIT,0) AS NETDUE,
                (CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.DEBIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END) AS RECAMOUNT,
                ISNULL(ISNULL(DEBIT,0) - ISNULL(CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.DEBIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END,0),0) AS BALANCE
                FROM TBLTRANSVCH V
                INNER JOIN TRANSMAIN M ON M.VCHTYPE = V.VCHTYPE AND M.VCHNO = V.VCHNO AND M.CMP_ID = V.CMP_ID AND M.LOCID = V.LOCID
                LEFT OUTER JOIN LEVEL5 L5 ON L5.LEVEL4+L5.LEVEL5 = V.DMCODE + V.CODE AND V.CMP_ID = L5.COMP_ID
                LEFT OUTER JOIN USERS U ON U.ID = V.OrderTakerId AND U.CMP_ID = V.CMP_ID AND U.LOCID = V.LOCID AND V.CMP_ID = U.CMP_ID 
                WHERE V.VCHTYPE ='SP' AND V.TUCKS = '9' AND V.CMP_ID = {cmpId} AND V.LOCID LIKE '{locId}' AND V.FINID  BETWEEN '1' AND '100' 
                AND CONVERT(VARCHAR,V.VCHDATE,111) BETWEEN '{fromDate.ToString("yyyy/MM/dd")}' AND '{toDate.ToString("yyyy/MM/dd")}' {auth.ApprovalSystem.Replace("<>", "=")} ORDER BY L5.NAMES";
            }
            else if (status.ToLower() == "overdue")
            {
                qry = $@"SELECT V.VCHNO AS INVOICENO,V.DMCODE + V.CODE AS CODE, L5.NAMES,U.USERNAME AS ORDERTAKER, CONVERT(VARCHAR, V.VCHDATE,103) AS INVDATE, CONVERT(VARCHAR, V.DUEDATE,103) AS DUEDATE,
                ISNULL(V.DISCOUNT,0) AS DISCOUNT,ISNULL(V.DiscountAmt,0) AS DISAMOUNT,ISNULL(V.OtherCredit,0) AS OTHERCREDIT,ISNULL(V.DEBIT,0) AS NETDUE,
                (CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.DEBIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END) AS RECAMOUNT,
                ISNULL(ISNULL(DEBIT,0) - ISNULL(CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.DEBIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END,0),0) AS BALANCE
                FROM TBLTRANSVCH V
                INNER JOIN TRANSMAIN M ON M.VCHTYPE = V.VCHTYPE AND M.VCHNO = V.VCHNO AND M.CMP_ID = V.CMP_ID AND M.LOCID = V.LOCID
                LEFT OUTER JOIN LEVEL5 L5 ON L5.LEVEL4+L5.LEVEL5 = V.DMCODE + V.CODE AND V.CMP_ID = L5.COMP_ID
                LEFT OUTER JOIN USERS U ON U.ID = V.OrderTakerId AND U.CMP_ID = V.CMP_ID AND U.LOCID = V.LOCID AND V.CMP_ID = U.CMP_ID 
                WHERE V.VCHTYPE ='SP' AND V.TUCKS = '9'  AND V.CMP_ID = {cmpId} AND V.LOCID LIKE '{locId}' AND V.FINID  BETWEEN '1' AND '100' AND CONVERT(VARCHAR,V.DUEDATE,111) <= convert(varchar(11), GETDATE(), 111) AND
                ISNULL(ISNULL(DEBIT,0) - ISNULL(CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.DEBIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END,0),0) <> 0 {auth.ApprovalSystem.Replace("<>", "=")} ORDER BY L5.NAMES";
            }
            else if (status.ToLower() == "pending")
            {
                qry = $@"SELECT   V.VCHNO AS INVOICENO,V.DMCODE + V.CODE AS CODE, L5.NAMES,U.USERNAME AS ORDERTAKER, CONVERT(VARCHAR, V.VCHDATE,103) AS INVDATE, CONVERT(VARCHAR, V.DUEDATE,103) AS DUEDATE,
                ISNULL(V.DISCOUNT,0) AS DISCOUNT,ISNULL(V.DiscountAmt,0) AS DISAMOUNT,ISNULL(V.OtherCredit,0) AS OTHERCREDIT,ISNULL(V.DEBIT,0) AS NETDUE,
                (CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.DEBIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END) AS RECAMOUNT,
                ISNULL(ISNULL(DEBIT,0) - ISNULL(CASE WHEN V.DMCODE + V.CODE = '{cashCode}00001' THEN ISNULL(V.DEBIT,0) ELSE ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) END,0),0) AS BALANCE
                FROM TBLTRANSVCH V
                INNER JOIN TRANSMAIN M ON M.VCHTYPE = V.VCHTYPE AND M.VCHNO = V.VCHNO AND M.CMP_ID = V.CMP_ID AND M.LOCID AND V.LOCID
                LEFT OUTER JOIN LEVEL5 L5 ON L5.LEVEL4+L5.LEVEL5 = V.DMCODE + V.CODE AND V.CMP_ID = L5.COMP_ID
                LEFT OUTER JOIN USERS U ON U.ID = V.OrderTakerId  AND U.LOCID = V.LOCID AND V.CMP_ID = U.CMP_ID
                WHERE V.VCHTYPE ='SP' AND V.TUCKS = '9' AND V.CMP_ID = {cmpId} AND V.LOCID = '{locId}' AND V.FINID  BETWEEN '1' AND '100' 
                AND ISNULL(ISNULL(DEBIT,0) - ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO  AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0),0) <> 0 {auth.ApprovalSystem.Replace("<>", "=")}
                UNION ALL 
                SELECT V.VCHNO AS INVOICENO,V.DMCODE + V.CODE AS CODE, L5.NAMES,U.USERNAME AS ORDERTAKER, CONVERT(VARCHAR, V.VCHDATE,103) AS INVDATE, CONVERT(VARCHAR, V.DUEDATE,103) AS DUEDATE, 
                0 AS DISCOUNT,0AS DISAMOUNT,0 AS OTHERCREDIT,ISNULL(V.Credit,0)*-1 AS NETDUE, 
                ISNULL((SELECT SUM(ISNULL(RECAMOUNT,0)) FROM TBLADJUSTINVOICE WHERE INVNO = V.VCHNO AND INVTYPE = V.VCHTYPE AND FINID  = V.FINID AND COMP_ID = V.CMP_ID),0) AS RECAMOUNT, 
                ISNULL(CREDIT,0)*-1 AS BALANCE 
                FROM TBLTRANSVCH V 
                INNER JOIN TRANSMAIN M ON M.VCHTYPE = V.VCHTYPE AND M.VCHNO = V.VCHNO AND M.CMP_ID = V.CMP_ID AND M.LOCID = V.LOCID
                LEFT OUTER JOIN LEVEL5 L5 ON L5.LEVEL4+L5.LEVEL5 = V.DMCODE + V.CODE AND V.CMP_ID = L5.COMP_ID
                LEFT OUTER JOIN USERS U ON U.ID = V.OrderTakerId AND U.LOCID = V.LOCID AND V.CMP_ID = U.CMP_ID 
                WHERE V.VCHTYPE ='SR' AND V.TUCKS = '9' AND V.CMP_ID = {cmpId} AND V.LOCID LIKE '{locId}' AND V.FINID  BETWEEN '1' AND '100' {auth.ApprovalSystem.Replace("<>", "=")} ORDER BY NAMES";
            }

            return _dataLogic.LoadData(qry);
        }

        public DataTable GetRecAmount(int invoiceNo, string vchType)
        {
            string qry = $@"SELECT ADJ.VCHTYPE, ADJ.VCHNO, CONVERT(VARCHAR(11), T.VCHDATE, 103) VCHDATE, ADJ.RECAMOUNT
			FROM TBLADJUSTINVOICE ADJ
			LEFT OUTER JOIN TBLTRANSVCH T ON ADJ.VCHNO = T.VCHNO AND ADJ.VCHTYPE = T.VCHTYPE AND ADJ.COMP_ID = T.CMP_ID
			WHERE ADJ.INVNO = {invoiceNo} AND ADJ.INVTYPE = '{vchType}' AND ADJ.COMP_ID = {auth.CmpId} AND ADJ.FINID = {auth.FinId} AND T.TUCKS = 9 AND T.LOCID = '{auth.LocId}'";

            return _dataLogic.LoadData(qry);
        }

        public DataTable GetJobDueStatus(DateTime fromDate, DateTime toDate)
        {
            string locId = "%";
            if(auth.LocId != "HO")
            {
                locId = auth.LocId;
            }

            string qry = $@"SELECT ISNULL(T.JOBNO,0) JOBID, ISNULL(J.JOBNO,0) JOBNO, L.LOCNAME AS COSTCENTRE, L.LOCID, C.COSTCENTRENAME AS FARMNAME, L5.LEVEL4 + L5.LEVEL5 AS CODE, L5.NAMES AS PARTY,
            SUM(CASE WHEN CONVERT(VARCHAR(11), T.VCHDATE, 111) < '{fromDate.ToString("yyyy/MM/dd")}' THEN ISNULL(DEBIT,0) - ISNULL(CREDIT,0) ELSE 0 END) OPBALANCE, 
            SUM(CASE WHEN ISNULL(DEBIT,0) > 0 AND CONVERT (VARCHAR(11), VCHDATE, 111) BETWEEN '{fromDate.ToString("yyyy/MM/dd")}' AND '{toDate.ToString("yyyy/MM/dd")}' THEN (ISNULL(DEBIT,0)) ELSE 0 END) DEBIT,
            SUM(CASE WHEN ISNULL(CREDIT,0) > 0 AND CONVERT (VARCHAR(11), VCHDATE, 111) BETWEEN '{fromDate.ToString("yyyy/MM/dd")}' AND '{toDate.ToString("yyyy/MM/dd")}' THEN (ISNULL(CREDIT,0)) ELSE 0 END) CREDIT,
            SUM(CASE WHEN CONVERT(VARCHAR(11), T.VCHDATE, 111) <= '{toDate.ToString("yyyy/MM/dd")}' THEN ISNULL(DEBIT,0) - ISNULL(CREDIT,0) ELSE 0 END) CLBALANCE
            FROM TBLTRANSVCH T
            LEFT OUTER JOIN LEVEL5 L5 ON T.DMCODE + T.CODE = L5.LEVEL4 + L5.LEVEL5 AND T.CMP_ID = L5.COMP_ID
            LEFT OUTER JOIN LEVEL4 L4 ON L5.LEVEL4= L4.LEVEL3 + L4.LEVEL4 AND T.CMP_ID = L4.COMP_ID
            LEFT OUTER JOIN TBLJOBNO J ON J.ID = T.JOBNO AND T.CMP_ID = J.CMP_ID
            LEFT OUTER JOIN TBLCOSTCENTRE C ON C.COSTCENTREID = J.COSTCENTREID AND C.CMPID = T.CMP_ID 
            INNER JOIN LOCATION L ON L.LOCID = J.LOCID AND L.CMP_ID = T.CMP_ID
            WHERE L4.TAG = 'D' AND T.CMP_ID = {auth.CmpId} AND T.LOCID LIKE '{locId}' AND T.FINID = {auth.FinId} 
            GROUP BY T.JOBNO, J.JOBNO, L5.LEVEL4 + L5.LEVEL5, L5.NAMES,L.LOCNAME,L.LOCID, C.COSTCENTRENAME
            HAVING SUM(CASE WHEN CONVERT(VARCHAR(11) , T.VCHDATE  ,111) <= '{toDate.ToString("yyyy/MM/dd")}' THEN ISNULL(DEBIT,0) - ISNULL(CREDIT,0) ELSE 0 END) <> 0
            ORDER BY J.JOBNO, L.LOCID, C.COSTCENTRENAME, L5.NAMES";
            return _dataLogic.LoadData(qry);
        }
    }
}
